version: '3.8'

networks:
  osu_tap_network:

volumes:
    mysql-data: {}
    tmp-data: {}
    redis-data: {}

services:
  osutap: &app
      build:
          context: .
          dockerfile: php.dockerfile
      user: "${APP_UID:-10001}:${APP_GID:-10001}"
      volumes:
          - /etc/passwd:/etc/passwd:ro
          - /etc/group:/etc/group:ro
          - tmp-data:/tmp:rw
          - .:/app:rw
      depends_on:
          mysql: {condition: service_healthy}
          redis: {condition: service_healthy}
      networks:
          - osu_tap_network

  queue:
      <<: *app
      command: php /app/artisan horizon

  cron:
      <<: *app
      command: supercronic /etc/supercronic/laravel # it runs artisan schedule:run

  web:
      build:
          context: .
          dockerfile: nginx.dockerfile
      ports:
          - "8080:8080"
      volumes:
          - /etc/passwd:/etc/passwd:ro
          - /etc/group:/etc/group:ro
          - .:/app:rw
      depends_on:
          - osutap
      healthcheck: # Healthcheck docs: <https://docs.docker.com/engine/reference/builder/#healthcheck>
          test: [ "CMD", "service", "nginx", "status" ]
          interval: 15s
          timeout: 15s
          start_period: 10s
      networks:
          - osu_tap_network

  mysql:
    image: mariadb:10.8.2-rc-focal #image page: <https://hub.docker.com/_/mariadb>
    restart: unless-stopped
    volumes:
        - mysql-data:/var/lib/mysql
    tty: true
    ports:
      - "3306:3306"
    env_file:
        - .env
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-forge}
    healthcheck: # Healthcheck docs: <https://docs.docker.com/engine/reference/builder/#healthcheck>
        test: mysqladmin ping -h 127.0.0.1 -u $$DB_USERNAME --password=$$DB_PASSWORD
        interval: 15s
        timeout: 15s
        start_period: 10s
    networks:
      - osu_tap_network

  redis:
      image: redis:7.2.4 #image page: <https://hub.docker.com/_/redis/
      restart: unless-stopped
      volumes:
          - redis-data:/root/redis
      ports:
          - "6379:6379"
      environment:
          REDIS_PASSWORD: ${REDIS_PASSWORD:-forge}
          REDIS_PORT: 6379
      healthcheck: # Healthcheck docs: <https://docs.docker.com/engine/reference/builder/#healthcheck>
          test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      networks:
          - osu_tap_network

  npm:
      image: node:20.10.0 #image page: <https://hub.docker.com/_/node>
      container_name: npm
      user: "${APP_UID:-10001}:${APP_GID:-10001}"
      volumes:
          - .:/app:rw
      ports:
          - "5173:5173"
      working_dir: /app
      entrypoint: ['npm']
      networks:
          - osu_tap_network
